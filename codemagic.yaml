workflows:
  ios-release:
    name: iOS Release
    environment:
      vars:
        CERTIFICATE_P12: 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
        PROVISIONING_PROFILE: 

        CERTIFICATE_PASSWORD: "Nfx6HJcJ"
        DEVELOPMENT_TEAM: "WT5TSJ49FM"
        BUNDLE_ID: "com.new.notificar" 
    scripts:
      - name: Set up code signing
        script: |
          mkdir -p ~/certs
          echo $CERTIFICATE_P12 | base64 --decode > ~/certs/cert.p12
          echo $PROVISIONING_PROFILE | base64 --decode > ~/certs/profile.mobileprovision
          security create-keychain -p "" build.keychain
          security import ~/certs/cert.p12 -k build.keychain -P $CERTIFICATE_PASSWORD -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          UUID=$(grep UUID -A1 -a ~/certs/profile.mobileprovision | grep -io "[-A-F0-9]\{36\}")
          cp ~/certs/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision

      - name: Get dependencies
        script: flutter pub get

      - name: Reinstall CocoaPods
        script: |
          cd ios
          rm -rf Pods Podfile.lock
          pod install
          cd ..
      - name: Create exportOptions.plist
script: |
    cat > exportOptions.plist <<EOF
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
    <plist version="1.0">
    <dict>
      <key>method</key>
      <string>app-store</string>
      <key>teamID</key>
      <string>$DEVELOPMENT_TEAM</string>
      <key>signingStyle</key>
      <string>manual</string>
      <key>provisioningProfiles</key>
      <dict>
        <key>$BUNDLE_ID</key>
        <string>match AppStore $BUNDLE_ID</string>
      </dict>
    </dict>
    </plist>
    EOF

      - name: Build IPA
        script: |
          flutter build ios --release
          cd ios
          # Usando xcodebuild para garantir que a assinatura seja aplicada corretamente
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release archive -archivePath $PWD/build/Runner.xcarchive DEVELOPMENT_TEAM=$DEVELOPMENT_TEAM 
          $PWD/build/Runner.xcarchive
          xcodebuild -exportArchive -archivePath $PWD/build/Runner.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build/ios/ipa
          cd ..