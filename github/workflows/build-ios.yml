name: Build iOS IPA

on:
  workflow_dispatch:  # Permite iniciar o workflow manualmente

jobs:
  build:
    runs-on: macos-latest  # Vai rodar em um ambiente macOS

    steps:
      # Passo 1: Baixar o código do repositório
      - uses: actions/checkout@v4

      # Passo 2: Decodificar e instalar certificados e perfil de provisão
      - name: Decode Certificates
        run: |
          echo "$CERTIFICATE_BASE64" | base64 --decode > dist.p12
          echo "$PROVISION_PROFILE_BASE64" | base64 --decode > profile.mobileprovision

      - name: Install Certificates
        run: |
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import dist.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      # Passo 3: Construir o IPA
      - name: Build IPA
        run: |
          # Defina o caminho correto para o repositório
          REPO_PATH=$GITHUB_WORKSPACE/notificar-corrigido-main
          
          # Caminhos para o workspace e plist
          WORKSPACE_PATH=$REPO_PATH/ios/Runner.xcworkspace
          EXPORT_OPTIONS_PATH=$REPO_PATH/ios/ExportOptions.plist
          
          xcodebuild -workspace $WORKSPACE_PATH \
            -scheme Runner \
            -configuration Release \
            -archivePath $PWD/build/Runner.xcarchive \
            archive

          xcodebuild -exportArchive \
            -archivePath $PWD/build/Runner.xcarchive \
            -exportOptionsPlist $EXPORT_OPTIONS_PATH \
            -exportPath $PWD/build

      # Passo 4: Criar uma release no GitHub
      - name: Create GitHub Release
        id: release
        run: |
          TAG_NAME="v1.0.0"  # Defina sua versão ou tag personalizada
          RELEASE_NAME="Release v1.0.0"
          BODY="Release do app iOS"

          RESPONSE=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"tag_name": "'"$TAG_NAME"'", "name": "'"$RELEASE_NAME"'", "body": "'"$BODY"'", "draft": false, "prerelease": false}' \
            https://api.github.com/repos/${{ github.repository }}/releases)

          echo "$RESPONSE" > response.json

      # Passo 5: Fazer o upload do IPA para a Release criada
      - name: Upload IPA to Release
        run: |
          RELEASE_ID=$(cat response.json | jq -r .id)
          IPA_FILE_PATH="build/Runner.ipa"

          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$IPA_FILE_PATH" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=Runner.ipa"

          echo "IPA enviado para a Release"
